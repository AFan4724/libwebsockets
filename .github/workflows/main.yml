name: Android arm64-v8a Build

on: [push, pull_request]

env:
  ANDROID_NDK: ${{ github.workspace }}/android-ndk-r25b
  BUILD_DIR: build_android
  INSTALL_DIR: install_android
  OPENSSL_PREFIX: ${{ github.workspace }}/openssl-android-arm64  # 修复路径冲突问题[3](@ref)

jobs:
  android-build:
    name: Android arm64-v8a
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup NDK
        run: |
          wget -q https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
          unzip -q android-ndk-r25b-linux.zip -d ${{ github.workspace }}
          echo "${{ env.ANDROID_NDK }}/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH

      - name: Build OpenSSL
        run: |
          # 修复路径重复问题[3](@ref)
          export OPENSSL_INSTALL_DIR=${{ env.OPENSSL_PREFIX }}
          rm -rf $OPENSSL_INSTALL_DIR
          
          git config --global http.sslVerify "false"
          git clone --depth 1 --branch OpenSSL_1_1_1w https://github.com/openssl/openssl.git
          cd openssl
          git checkout e04bd3433fd84e1861bf258ea37928d9845e6a86 --force

          export ANDROID_NDK_HOME=${{ env.ANDROID_NDK }}
          ./Configure --prefix=$OPENSSL_INSTALL_DIR \
            android-arm64 \
            -D__ANDROID_API__=24 \
            no-shared \
            no-asm \
            -fPIC \
            --cross-compile-prefix=aarch64-linux-android- \
            --sysroot=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/sysroot

          make -j$(nproc)
          make install_sw  # 修复安装目标[6](@ref)

      - name: Verify OpenSSL Build
        run: |
          # 增加路径检查[7](@ref)
          echo "验证编译产物路径:"
          ls -l ${{ env.OPENSSL_PREFIX }}/lib/libssl.a
          ls -l ${{ env.OPENSSL_PREFIX }}/lib/libcrypto.a
          file ${{ env.OPENSSL_PREFIX }}/lib/libssl.a | grep "ARM aarch64"

      - name: Configure CMake
        env:
          PKG_CONFIG_PATH: ${{ env.OPENSSL_PREFIX }}/lib/pkgconfig  # 新增pkgconfig路径[3](@ref)
        run: |
          cmake -B $BUILD_DIR -S . \
            -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=android-24 \
            -DCMAKE_TOOLCHAIN_FILE=${{ env.ANDROID_NDK }}/build/cmake/android.toolchain.cmake \
            -DLWS_WITH_SSL=ON \
            -DLWS_OPENSSL_LIBRARIES="${{ env.OPENSSL_PREFIX }}/lib/libssl.a;${{ env.OPENSSL_PREFIX }}/lib/libcrypto.a" \  # 修复静态链接
            -DLWS_OPENSSL_INCLUDE_DIRS=${{ env.OPENSSL_PREFIX }}/include \
            -DLWS_WITHOUT_TESTAPPS=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_FIND_ROOT_PATH=${{ env.OPENSSL_PREFIX }} 

      - name: Build and Install
        run: |
          cmake --build $BUILD_DIR --target install --parallel $(nproc)
          # 增加产物验证[6](@ref)
          readelf -h $INSTALL_DIR/lib/libwebsockets.so | grep "ARM aarch64"
          ldd $INSTALL_DIR/lib/libwebsockets.so | grep ssl

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-arm64-v8a
          path: |
            ${{ env.INSTALL_DIR }}/lib/*
            ${{ env.INSTALL_DIR }}/include/*
          if-no-files-found: error
